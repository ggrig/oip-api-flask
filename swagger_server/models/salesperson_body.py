# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SalespersonBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, timestamp: str=None, code: str=None, description: str=None, fax_extension: str=None, phone_extension: str=None, contact_mail: str=None, tenant: str=None):  # noqa: E501
        """SalespersonBody - a model defined in Swagger

        :param timestamp: The timestamp of this SalespersonBody.  # noqa: E501
        :type timestamp: str
        :param code: The code of this SalespersonBody.  # noqa: E501
        :type code: str
        :param description: The description of this SalespersonBody.  # noqa: E501
        :type description: str
        :param fax_extension: The fax_extension of this SalespersonBody.  # noqa: E501
        :type fax_extension: str
        :param phone_extension: The phone_extension of this SalespersonBody.  # noqa: E501
        :type phone_extension: str
        :param contact_mail: The contact_mail of this SalespersonBody.  # noqa: E501
        :type contact_mail: str
        :param tenant: The tenant of this SalespersonBody.  # noqa: E501
        :type tenant: str
        """
        self.swagger_types = {
            'timestamp': str,
            'code': str,
            'description': str,
            'fax_extension': str,
            'phone_extension': str,
            'contact_mail': str,
            'tenant': str
        }

        self.attribute_map = {
            'timestamp': 'Timestamp',
            'code': 'Code',
            'description': 'Description',
            'fax_extension': 'FaxExtension',
            'phone_extension': 'PhoneExtension',
            'contact_mail': 'ContactMail',
            'tenant': 'Tenant'
        }
        self._timestamp = timestamp
        self._code = code
        self._description = description
        self._fax_extension = fax_extension
        self._phone_extension = phone_extension
        self._contact_mail = contact_mail
        self._tenant = tenant

    @classmethod
    def from_dict(cls, dikt) -> 'SalespersonBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The salesperson_body of this SalespersonBody.  # noqa: E501
        :rtype: SalespersonBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self) -> str:
        """Gets the timestamp of this SalespersonBody.

        The timestamp of the salesperson  # noqa: E501

        :return: The timestamp of this SalespersonBody.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: str):
        """Sets the timestamp of this SalespersonBody.

        The timestamp of the salesperson  # noqa: E501

        :param timestamp: The timestamp of this SalespersonBody.
        :type timestamp: str
        """

        self._timestamp = timestamp

    @property
    def code(self) -> str:
        """Gets the code of this SalespersonBody.

        The code of the salesperson  # noqa: E501

        :return: The code of this SalespersonBody.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code: str):
        """Sets the code of this SalespersonBody.

        The code of the salesperson  # noqa: E501

        :param code: The code of this SalespersonBody.
        :type code: str
        """

        self._code = code

    @property
    def description(self) -> str:
        """Gets the description of this SalespersonBody.

        The description of the salesperson  # noqa: E501

        :return: The description of this SalespersonBody.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this SalespersonBody.

        The description of the salesperson  # noqa: E501

        :param description: The description of this SalespersonBody.
        :type description: str
        """

        self._description = description

    @property
    def fax_extension(self) -> str:
        """Gets the fax_extension of this SalespersonBody.

        The fax extension of the salesperson  # noqa: E501

        :return: The fax_extension of this SalespersonBody.
        :rtype: str
        """
        return self._fax_extension

    @fax_extension.setter
    def fax_extension(self, fax_extension: str):
        """Sets the fax_extension of this SalespersonBody.

        The fax extension of the salesperson  # noqa: E501

        :param fax_extension: The fax_extension of this SalespersonBody.
        :type fax_extension: str
        """

        self._fax_extension = fax_extension

    @property
    def phone_extension(self) -> str:
        """Gets the phone_extension of this SalespersonBody.

        The phone extension of the salesperson  # noqa: E501

        :return: The phone_extension of this SalespersonBody.
        :rtype: str
        """
        return self._phone_extension

    @phone_extension.setter
    def phone_extension(self, phone_extension: str):
        """Sets the phone_extension of this SalespersonBody.

        The phone extension of the salesperson  # noqa: E501

        :param phone_extension: The phone_extension of this SalespersonBody.
        :type phone_extension: str
        """

        self._phone_extension = phone_extension

    @property
    def contact_mail(self) -> str:
        """Gets the contact_mail of this SalespersonBody.

        The contact email of the salesperson  # noqa: E501

        :return: The contact_mail of this SalespersonBody.
        :rtype: str
        """
        return self._contact_mail

    @contact_mail.setter
    def contact_mail(self, contact_mail: str):
        """Sets the contact_mail of this SalespersonBody.

        The contact email of the salesperson  # noqa: E501

        :param contact_mail: The contact_mail of this SalespersonBody.
        :type contact_mail: str
        """

        self._contact_mail = contact_mail

    @property
    def tenant(self) -> str:
        """Gets the tenant of this SalespersonBody.

        The tenant name  # noqa: E501

        :return: The tenant of this SalespersonBody.
        :rtype: str
        """
        return self._tenant

    @tenant.setter
    def tenant(self, tenant: str):
        """Sets the tenant of this SalespersonBody.

        The tenant name  # noqa: E501

        :param tenant: The tenant of this SalespersonBody.
        :type tenant: str
        """

        self._tenant = tenant
