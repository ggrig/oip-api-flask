# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BankaccountinfoBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, mandate_id: str=None, auto_pay_enabled: bool=None, customer_no: str=None, iban: str=None, swift_code: str=None, owner: str=None, company: str=None):  # noqa: E501
        """BankaccountinfoBody - a model defined in Swagger

        :param mandate_id: The mandate_id of this BankaccountinfoBody.  # noqa: E501
        :type mandate_id: str
        :param auto_pay_enabled: The auto_pay_enabled of this BankaccountinfoBody.  # noqa: E501
        :type auto_pay_enabled: bool
        :param customer_no: The customer_no of this BankaccountinfoBody.  # noqa: E501
        :type customer_no: str
        :param iban: The iban of this BankaccountinfoBody.  # noqa: E501
        :type iban: str
        :param swift_code: The swift_code of this BankaccountinfoBody.  # noqa: E501
        :type swift_code: str
        :param owner: The owner of this BankaccountinfoBody.  # noqa: E501
        :type owner: str
        :param company: The company of this BankaccountinfoBody.  # noqa: E501
        :type company: str
        """
        self.swagger_types = {
            'mandate_id': str,
            'auto_pay_enabled': bool,
            'customer_no': str,
            'iban': str,
            'swift_code': str,
            'owner': str,
            'company': str
        }

        self.attribute_map = {
            'mandate_id': 'MandateID',
            'auto_pay_enabled': 'AutoPayEnabled',
            'customer_no': 'CustomerNo',
            'iban': 'IBAN',
            'swift_code': 'SWIFTCode',
            'owner': 'Owner',
            'company': 'Company'
        }
        self._mandate_id = mandate_id
        self._auto_pay_enabled = auto_pay_enabled
        self._customer_no = customer_no
        self._iban = iban
        self._swift_code = swift_code
        self._owner = owner
        self._company = company

    @classmethod
    def from_dict(cls, dikt) -> 'BankaccountinfoBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The bankaccountinfo_body of this BankaccountinfoBody.  # noqa: E501
        :rtype: BankaccountinfoBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mandate_id(self) -> str:
        """Gets the mandate_id of this BankaccountinfoBody.

        The Mandate ID  # noqa: E501

        :return: The mandate_id of this BankaccountinfoBody.
        :rtype: str
        """
        return self._mandate_id

    @mandate_id.setter
    def mandate_id(self, mandate_id: str):
        """Sets the mandate_id of this BankaccountinfoBody.

        The Mandate ID  # noqa: E501

        :param mandate_id: The mandate_id of this BankaccountinfoBody.
        :type mandate_id: str
        """

        self._mandate_id = mandate_id

    @property
    def auto_pay_enabled(self) -> bool:
        """Gets the auto_pay_enabled of this BankaccountinfoBody.

        Indicates if autopay is enabled  # noqa: E501

        :return: The auto_pay_enabled of this BankaccountinfoBody.
        :rtype: bool
        """
        return self._auto_pay_enabled

    @auto_pay_enabled.setter
    def auto_pay_enabled(self, auto_pay_enabled: bool):
        """Sets the auto_pay_enabled of this BankaccountinfoBody.

        Indicates if autopay is enabled  # noqa: E501

        :param auto_pay_enabled: The auto_pay_enabled of this BankaccountinfoBody.
        :type auto_pay_enabled: bool
        """

        self._auto_pay_enabled = auto_pay_enabled

    @property
    def customer_no(self) -> str:
        """Gets the customer_no of this BankaccountinfoBody.

        The Customer Number  # noqa: E501

        :return: The customer_no of this BankaccountinfoBody.
        :rtype: str
        """
        return self._customer_no

    @customer_no.setter
    def customer_no(self, customer_no: str):
        """Sets the customer_no of this BankaccountinfoBody.

        The Customer Number  # noqa: E501

        :param customer_no: The customer_no of this BankaccountinfoBody.
        :type customer_no: str
        """

        self._customer_no = customer_no

    @property
    def iban(self) -> str:
        """Gets the iban of this BankaccountinfoBody.

        The IBAN  # noqa: E501

        :return: The iban of this BankaccountinfoBody.
        :rtype: str
        """
        return self._iban

    @iban.setter
    def iban(self, iban: str):
        """Sets the iban of this BankaccountinfoBody.

        The IBAN  # noqa: E501

        :param iban: The iban of this BankaccountinfoBody.
        :type iban: str
        """

        self._iban = iban

    @property
    def swift_code(self) -> str:
        """Gets the swift_code of this BankaccountinfoBody.

        The SWIFT Code  # noqa: E501

        :return: The swift_code of this BankaccountinfoBody.
        :rtype: str
        """
        return self._swift_code

    @swift_code.setter
    def swift_code(self, swift_code: str):
        """Sets the swift_code of this BankaccountinfoBody.

        The SWIFT Code  # noqa: E501

        :param swift_code: The swift_code of this BankaccountinfoBody.
        :type swift_code: str
        """

        self._swift_code = swift_code

    @property
    def owner(self) -> str:
        """Gets the owner of this BankaccountinfoBody.

        The account owner  # noqa: E501

        :return: The owner of this BankaccountinfoBody.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner: str):
        """Sets the owner of this BankaccountinfoBody.

        The account owner  # noqa: E501

        :param owner: The owner of this BankaccountinfoBody.
        :type owner: str
        """

        self._owner = owner

    @property
    def company(self) -> str:
        """Gets the company of this BankaccountinfoBody.

        The tenant name  # noqa: E501

        :return: The company of this BankaccountinfoBody.
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company: str):
        """Sets the company of this BankaccountinfoBody.

        The tenant name  # noqa: E501

        :param company: The company of this BankaccountinfoBody.
        :type company: str
        """

        self._company = company
