# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BookingsourceBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, no: str=None, category: str=None, name: str=None, tenant: str=None):  # noqa: E501
        """BookingsourceBody - a model defined in Swagger

        :param no: The no of this BookingsourceBody.  # noqa: E501
        :type no: str
        :param category: The category of this BookingsourceBody.  # noqa: E501
        :type category: str
        :param name: The name of this BookingsourceBody.  # noqa: E501
        :type name: str
        :param tenant: The tenant of this BookingsourceBody.  # noqa: E501
        :type tenant: str
        """
        self.swagger_types = {
            'no': str,
            'category': str,
            'name': str,
            'tenant': str
        }

        self.attribute_map = {
            'no': 'No',
            'category': 'Category',
            'name': 'Name',
            'tenant': 'Tenant'
        }
        self._no = no
        self._category = category
        self._name = name
        self._tenant = tenant

    @classmethod
    def from_dict(cls, dikt) -> 'BookingsourceBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The bookingsource_body of this BookingsourceBody.  # noqa: E501
        :rtype: BookingsourceBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def no(self) -> str:
        """Gets the no of this BookingsourceBody.

        The booking source number  # noqa: E501

        :return: The no of this BookingsourceBody.
        :rtype: str
        """
        return self._no

    @no.setter
    def no(self, no: str):
        """Sets the no of this BookingsourceBody.

        The booking source number  # noqa: E501

        :param no: The no of this BookingsourceBody.
        :type no: str
        """

        self._no = no

    @property
    def category(self) -> str:
        """Gets the category of this BookingsourceBody.

        The category of the booking source  # noqa: E501

        :return: The category of this BookingsourceBody.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category: str):
        """Sets the category of this BookingsourceBody.

        The category of the booking source  # noqa: E501

        :param category: The category of this BookingsourceBody.
        :type category: str
        """

        self._category = category

    @property
    def name(self) -> str:
        """Gets the name of this BookingsourceBody.

        The name of the booking source  # noqa: E501

        :return: The name of this BookingsourceBody.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this BookingsourceBody.

        The name of the booking source  # noqa: E501

        :param name: The name of this BookingsourceBody.
        :type name: str
        """

        self._name = name

    @property
    def tenant(self) -> str:
        """Gets the tenant of this BookingsourceBody.

        The tenant name  # noqa: E501

        :return: The tenant of this BookingsourceBody.
        :rtype: str
        """
        return self._tenant

    @tenant.setter
    def tenant(self, tenant: str):
        """Sets the tenant of this BookingsourceBody.

        The tenant name  # noqa: E501

        :param tenant: The tenant of this BookingsourceBody.
        :type tenant: str
        """

        self._tenant = tenant
